import java.util.Scanner;

public class QuickSort {

    
    public static void quickSort(int[] arr, int low, int high) {
        if (low < high) {
            // Partitioning index
            int pi = partition(arr, low, high);
            
           
            quickSort(arr, low, pi - 1);  
            quickSort(arr, pi + 1, high); 
        }
    }


    private static int partition(int[] arr, int low, int high) {
                int pivot = arr[low];
                int i = low; // Pointer for the smaller element
                int j = low + 1; // Start scanning from the next element
        
       
        while (j <= high) {
            if (arr[j] < pivot) {
                i++; 
                swap(arr, i, j);
            }
            j++; 
        }
        
        
        swap(arr, low, i);
        
                return i;
    }

    
    private static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

  
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

      
        System.out.print("Enter the number of elements in the array: ");
        int n = scanner.nextInt();

      
        int[] arr = new int[n];

        
        System.out.println("Enter " + n + " elements:");
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }

        System.out.println("\nUnsorted array:");
        for (int num : arr) {
            System.out.print(num + " ");
        }

       
        quickSort(arr, 0, n - 1);

        System.out.println("\nSorted array:");
        for (int num : arr) {
            System.out.print(num + " ");
        }

        scanner.close(); 
    }
}
